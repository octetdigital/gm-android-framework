<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GLOBALS

global.inGame = false;

//IN GAME POPUP MESSAGES
global.async_exit = undefined;
global.async_quit = undefined;

//SOCIAL
global.player_name = undefined;
global.player_id   = undefined;

//DISPLAY
global.screen_h = room_height;
global.screen_w = room_width;
global.aspect_r = room_width / room_height;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SETUP SPRITE FONT
var _font = font_add_sprite_ext(sprASCII, "1234567890abcdefghijklmnopqrstuvwxyz!)&lt;&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZ:;,.",true, 1);
draw_set_colour(c_white);
draw_set_font(_font);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SETUP SCREEN

//APPLICATION SURFACE 
switch(os_type) {
    case os_windows:
    case os_macosx:
    case os_linux:
    case os_win8native:
    if(surface_get_width(application_surface)  != window_get_width() || 
       surface_get_height(application_surface) != window_get_height()) {
       global.screen_w = window_get_width();
       global.screen_h = window_get_height();
    }
break;
    case os_ios:
    case os_android:
    case os_winphone:
    case os_tizen:
    if(surface_get_width(application_surface)  != display_get_width() || 
       surface_get_height(application_surface) != display_get_height()) {
       global.screen_w = display_get_width();
       global.screen_h = display_get_height();
    }
    break;
}

//GUI CALCULATIONS
global.aspect_r = global.screen_w / global.screen_h;
var _ww = 0;
var _hh = 0;
if(global.aspect_r &gt; 1) {
    //LANDSCAPE
    _ww = room_width * global.aspect_r;
    _hh = room_height;
} else {
    //PORTRAIT
    _ww = room_width;
    _hh = room_height / global.aspect_r;
}
display_set_gui_maximise(floor(global.screen_w / _ww), floor(global.screen_h / _hh), 0, 0);

//OPTIMIZATION
draw_enable_alphablend(false);
draw_set_alpha_test(true);
draw_set_alpha_test_ref_value(128);
application_surface_draw_enable(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHECK KEYPRESS

var _bck = keyboard_check_released(vk_backspace);

//QUIT GAME
if(_bck &amp;&amp; !global.inGame) {
    global.async_exit = show_question_async("Quit the game?");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GOOGLE PLAY

var _id  = ds_map_find_value(async_load, "id");

if(_id == achievement_our_info) {
    global.player_name = ds_map_find_value(async_load, "name");
    global.player_id   = ds_map_find_value(async_load, "playerid");

    if(os_type == os_android) {
        achievement_load_leaderboard("CgkI0fz48IgCEAIQCA", 1, 10, achievement_filter_friends_only);
    } else {
            
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///QUIT THE GAME?

var _msg_id = ds_map_find_value(async_load, "id");

if(_msg_id == global.async_exit) {
var _answer = ds_map_find_value(async_load, "status");
    if(_answer) {
        game_end();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW APPLICATION SURFACE

texture_set_interpolation(false);
draw_set_alpha_test(false);
draw_surface_stretched(application_surface, 0, 0, global.screen_w, global.screen_h);
draw_set_alpha_test(true);
texture_set_interpolation(true);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW SCORE

draw_text(0, 0, "SCORE: " + string(score));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DO NOTHING</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-88,-45</point>
    <point>30,30</point>
  </PhysicsShapePoints>
</object>
